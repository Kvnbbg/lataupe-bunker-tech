# Dockerfile optimisé pour Railway
FROM python:3.11-slim-bullseye

# Métadonnées
LABEL maintainer="Lataupe Bunker Tech Team"
LABEL version="2.0.0"
LABEL description="Bunker Management System - Railway Deployment"

# Variables d'environnement Railway
ENV PYTHONUNBUFFERED=1
ENV PYTHONDONTWRITEBYTECODE=1
ENV FLASK_ENV=production
ENV PORT=8080
ENV DEBIAN_FRONTEND=noninteractive

# Créer un utilisateur non-root
RUN groupadd -r railway && useradd -r -g railway -d /app -s /sbin/nologin railway

# Installer les dépendances système
RUN apt-get update && apt-get install -y \
    gcc \
    g++ \
    libpq-dev \
    libffi-dev \
    libssl-dev \
    curl \
    git \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Créer le répertoire de l'application
WORKDIR /app

# Copier les fichiers de requirements
COPY requirements_railway.txt /app/
RUN pip install --no-cache-dir --upgrade pip \
    && pip install --no-cache-dir -r requirements_railway.txt

# Copier le code de l'application
COPY --chown=railway:railway . /app/

# Créer les répertoires nécessaires
RUN mkdir -p /app/logs /app/uploads /app/static/uploads \
    && chown -R railway:railway /app \
    && chmod -R 755 /app

# Script de démarrage Railway
COPY --chown=railway:railway start_railway.sh /app/
RUN chmod +x /app/start_railway.sh

# Passer à l'utilisateur non-root
USER railway

# Exposer le port Railway
EXPOSE 8080

# Vérification de santé
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD curl -f http://localhost:8080/health || exit 1

# Commande de démarrage
CMD ["./start_railway.sh"]
