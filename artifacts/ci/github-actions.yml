name: CI

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:

permissions:
  contents: read
  security-events: write
  actions: read

jobs:
  lint-and-test:
    name: Lint & Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          if [ -f requirements-dev.txt ]; then pip install -r requirements-dev.txt; fi

      - name: Install tooling
        run: |
          pip install pytest pytest-cov flake8 bandit pip-audit

      - name: Run linting
        run: |
          flake8 .

      - name: Run tests with coverage
        run: |
          pytest --maxfail=1 --disable-warnings --cov=. --cov-report=xml

      - name: Upload coverage report
        uses: actions/upload-artifact@v4
        with:
          name: coverage-xml
          path: coverage.xml

  sast:
    name: Static Application Security Testing
    runs-on: ubuntu-latest
    needs: lint-and-test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install SAST tooling
        run: |
          python -m pip install --upgrade pip
          pip install bandit safety detect-secrets

      - name: Run Bandit
        run: bandit -r src -lll -o bandit-report.json -f json

      - name: Run Safety audit
        run: safety check --full-report --output text --file requirements.txt > safety-report.txt

      - name: Scan for secrets
        run: detect-secrets scan --all-files > detect-secrets.json

      - name: Upload security reports
        uses: actions/upload-artifact@v4
        with:
          name: security-reports
          path: |
            bandit-report.json
            safety-report.txt
            detect-secrets.json

  docker-build:
    name: Build Container Image
    runs-on: ubuntu-latest
    needs: lint-and-test
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      - name: Build image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: false
          load: false
          tags: lataupe-bunker-tech:ci

      - name: Upload SBOM
        uses: anchore/sbom-action@v0
        with:
          image: lataupe-bunker-tech:ci
          output-file: sbom.spdx.json

      - name: Upload image artifacts
        uses: actions/upload-artifact@v4
        with:
          name: docker-sbom
          path: sbom.spdx.json
